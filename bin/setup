#!/usr/bin/env ruby
require "fileutils"

# path to your application root.
APP_ROOT = File.expand_path("..", __dir__)

# We don't want the setup method to have to do all this error checking, and we
# also want to explicitly log what we are executing, so we use this method
# instead of Kernel#system and friends
def system!(*args)
  log "Executing #{args}"
  if system(*args)
    log "#{args} succeeded"
  else
    log "#{args} failed"
    abort
  end
end

# It's helpful to know what messages came from this script, so we'll use log
# instead of puts to communicate with the user
def log(message)
  puts "[ bin/setup ] #{message}"
end

FileUtils.chdir(APP_ROOT) do
  # This script is a way to set up or update your development environment automatically.
  # This script is idempotent, so that you can run it at any time and get an expectable outcome.
  # Add necessary setup steps to this file.

  log "💎 Installing gems"
  # Only do bundle install if the much-faster bundle check indicates we need to
  system! "bundle check || bundle install"

  log "🧪 Dropping & recreating the test database"
  # Setting the RAILS_ENV explicitly to be sure we actually reset the database
  system!({"RAILS_ENV" => "development"}, "bin/rails db:reset || bin/rails db:prepare")
  system!({"RAILS_ENV" => "test"}, "bin/rails db:reset || bin/rails db:prepare")

  log "🧹 Removing old logs and tempfiles"
  system! "bin/rails log:clear tmp:clear"

  log "🎉 All set up! 🎉"
end
